git submodule update --init --recursive
# Load packages
library(tidyverse)
# Load packages
library(tidyverse)
library(here)
# Load cv data
cv <- read_csv(here("static", "data", "pubs.csv"))
# Load custom function
create_cv_section <- function(x, include_section = TRUE,
include_subsection = TRUE, include_year = TRUE) {
# Start CV section div
cat(paste0("<div class='cv-",
str_replace_all(tolower(x$section[1]), " ", "-"),
"'>"))
cat("\n")
# Create section headers
if (include_section) {
cat("<div class='cv-section'>")
cat(x$section[1])
cat("</div>")
}
if (include_subsection) {
if (!is.na(x$subsection[1])) {
cat("<div class='cv-subsection'>")
cat(x$subsection[1])
cat("</div>")
}
}
# Loop over the rows and extract the relevant information
for (i in 1:nrow(x)) {
cat("<div class='cv-item'>")
# Add year
if (include_year & !is.na(x$year[i])) {
cat(paste0("<p class='cv-year'>", x$year[i], "</p>"))
}
# Check if it is a link
if (!is.na(x$link[i])) {
cat(paste0("<a class='cv-content' href=", x$link[i], ">", x$content[i], "</a>"))
} else {
cat(paste0("<p class='cv-content'>", x$content[i], "</p>"))
}
cat("</div>")
}
# End CV section div
cat("</div>")
}
cv %>%
filter(section == "Publications") %>%
create_cv_section(include_section = FALSE, include_year = FALSE)
# Load custom function
create_cv_section <- function(x, include_section = TRUE,
include_year = TRUE) {
# Start CV section div
cat(paste0("<div class='cv-",
str_replace_all(tolower(x$section[1]), " ", "-"),
"'>"))
cat("\n")
# Create section headers
if (include_section) {
cat("<div class='cv-section'>")
cat(x$section[1])
cat("</div>")
}
# Loop over the rows and extract the relevant information
for (i in 1:nrow(x)) {
cat("<div class='cv-item'>")
# Add year
if (include_year & !is.na(x$year[i])) {
cat(paste0("<p class='cv-year'>", x$year[i], "</p>"))
}
# Check if it is a link
if (!is.na(x$link[i])) {
cat(paste0("<a class='cv-content' href=", x$link[i], ">", x$content[i], "</a>"))
} else {
cat(paste0("<p class='cv-content'>", x$content[i], "</p>"))
}
cat("</div>")
}
# End CV section div
cat("</div>")
}
cv %>%
filter(section == "Publications") %>%
create_cv_section(include_section = FALSE, include_year = FALSE)
x = cv %>%
filter(section == "Publications")
# Start CV section div
cat(paste0("<div class='cv-",
str_replace_all(tolower(x$section[1]), " ", "-"),
"'>"))
# Create section headers
if (include_section) {
cat("<div class='cv-section'>")
cat(x$section[1])
cat("</div>")
}
include_section = TRUE
# Create section headers
if (include_section) {
cat("<div class='cv-section'>")
cat(x$section[1])
cat("</div>")
}
# Loop over the rows and extract the relevant information
for (i in 1:nrow(x)) {
cat("<div class='cv-item'>")
# Add year
if (include_year & !is.na(x$year[i])) {
cat(paste0("<p class='cv-year'>", x$year[i], "</p>"))
}
# Check if it is a link
if (!is.na(x$link[i])) {
cat(paste0("<a class='cv-content' href=", x$link[i], ">", x$content[i], "</a>"))
} else {
cat(paste0("<p class='cv-content'>", x$content[i], "</p>"))
}
cat("</div>")
}
include_year = FALSE
# Loop over the rows and extract the relevant information
for (i in 1:nrow(x)) {
cat("<div class='cv-item'>")
# Add year
if (include_year & !is.na(x$year[i])) {
cat(paste0("<p class='cv-year'>", x$year[i], "</p>"))
}
# Check if it is a link
if (!is.na(x$link[i])) {
cat(paste0("<a class='cv-content' href=", x$link[i], ">", x$content[i], "</a>"))
} else {
cat(paste0("<p class='cv-content'>", x$content[i], "</p>"))
}
cat("</div>")
}
# Load cv data
cv <- read_csv(here("static", "data", "pubs.csv"))
x = cv %>%
filter(section == "Publications")
# Start CV section div
cat(paste0("<div class='cv-",
str_replace_all(tolower(x$section[1]), " ", "-"),
"'>"))
cat("\n")
# Create section headers
if (include_section) {
cat("<div class='cv-section'>")
cat(x$section[1])
cat("</div>")
}
# Loop over the rows and extract the relevant information
for (i in 1:nrow(x)) {
cat("<div class='cv-item'>")
# Add year
if (include_year & !is.na(x$year[i])) {
cat(paste0("<p class='cv-year'>", x$year[i], "</p>"))
}
# Check if it is a link
if (!is.na(x$link[i])) {
cat(paste0("<a class='cv-content' href=", x$link[i], ">", x$content[i], "</a>"))
} else {
cat(paste0("<p class='cv-content'>", x$content[i], "</p>"))
}
cat("</div>")
}
# Load packages
library(tidyverse)
# Load packages
library(tidyverse)
library(here)
# Load cv data
my_data <- read_csv(here("static", "data", "pubs.csv"))
my_data
my_data
my_data$Row <- row.names(my_data)
my_data
my_data$Row
my_data <- my_data[order(my_data$Year, as.numeric(my_data$Row),
decreasing = c(TRUE, TRUE)), ]
my_data <- my_data[order(my_data$year, as.numeric(my_data$Row),
decreasing = c(TRUE, TRUE)), ]
View(my_data)
my_data <- my_data[order(my_data$year, as.numeric(my_data$Row),
decreasing = c(TRUE, FALSE)), ]
View(my_data)
years <- sort(unique(my_data$Year), decreasing = TRUE)
years <- sort(unique(my_data$year), decreasing = TRUE)
years
unique(my_data$year)
# Load cv data
my_data <- read_csv(here("static", "data", "pubs.csv"))
years <- unique(my_data$year)
cat(paste("\n","## ",year,sep=""))
years
year = "in press"
cat(paste("\n","## ",year,sep=""))
thisyear <- my_data[my_data$year == year,]
thisyear
thisyear
thisyear
dim(thisyear)
dim(thisyear)[1]
?dim
i = 6
cat(paste("\n<li>",sep = ""))
cat(paste(thisyear$content[i]))
# Load cv data
my_data <- read_csv(here("static", "data", "pubs.csv"))
years <- unique(my_data$year)
cat(paste("\n","## ",year,sep=""))
my_data
years <- unique(my_data$year)
years
cat(paste("\n","## ",year,sep=""))
year = "In Press"
cat(paste("\n","## ",year,sep=""))
thisyear <- my_data[my_data$year == year,]
thisyear
thisyear
cat("\n<ul>")
cat(paste("\n<li>",sep = ""))
cat(paste(thisyear$content[i]))
i = 1
cat(paste(thisyear$content[i]))
if(!is.na(thisyear$pdf[i])){
cat("| <a href=\"",thisyear$pdf[i],"\">PDF</a>")
}
if(!is.na(thisyear$pdf[i])){
cat("|<a href=\"",thisyear$pdf[i],"\">PDF</a>")
}
cat("\n</ul>")
for(year in years){
cat(paste("\n","## ",year,sep=""))
thisyear <- my_data[my_data$year == year,]
if(dim(thisyear)[1] > 0){
cat("\n<ul>")
for(i in 1:(dim(thisyear)[1])){
cat(paste("\n<li>",sep = ""))
cat(paste(thisyear$content[i]))
if(!is.na(thisyear$pdf[i])){
cat("| <a href=\"",thisyear$pdf[i],"\">PDF</a>")
}
}
cat("\n</ul>")
}
}
# Load packages
library(tidyverse)
library(here)
# Load cv data
my_data <- read_csv(here("static", "data", "pubs.csv"))
years <- unique(my_data$year)
for(year in years){
cat(paste("\n","## ",year,sep=""))
thisyear <- my_data[my_data$year == year,]
if(dim(thisyear)[1] > 0){
cat("\n<ul>")
for(i in 1:(dim(thisyear)[1])){
cat(paste("\n<li>",sep = ""))
cat(paste(thisyear$content[i]))
if(!is.na(thisyear$pdf[i])){
cat("| <a href=\"",thisyear$pdf[i],"\">PDF</a>")
}
}
cat("\n</ul>")
}
}
knit_with_parameters('~/OneDrive - Michigan State University/tbslab/content/publications/index.Rmd')
knit_with_parameters('~/OneDrive - Michigan State University/tbslab/content/publications/index.Rmd')
# Load cv data
my_data <- read_csv(here("static", "data", "pubs.csv"))
# Load packages
library(tidyverse)
# Load packages
library(tidyverse)
library(here)
# Load cv data
my_data <- read_csv(here("static", "data", "pubs.csv"))
years
years
years <- unique(my_data$year)
years
year = "2021"
cat(paste("\n", "## ", year ,sep=""))
thisyear <- my_data[my_data$year == year,]
dim(thisyear)[1]
dim(thisyear)[1]
i = 1
cat(paste("\n<li>",sep = ""))
cat(paste(thisyear$content[i]))
if(!is.na(thisyear$pdf[i])){
cat(" | <a href=\"",thisyear$pdf[i],"\">PDF</a>")
}
test <- list("a", NA, "c")
paste(test)
str_c(test)
test
?str_c
paste(test)
paste(test, collapse = TRUE)
str_c(test, collapse = TRUE)
str_c(test, collapse = " ")
str_c(c("a", NA, "b"), "-d")
str_c(str_replace_na(c("a", NA, "b")), "-d")
thisyear[c("pdf", "code", "data")]
thisyear[c("pdf", "code", "data")][i]
thisyear[c("pdf", "code", "data")][,i]
thisyear[c("pdf", "code", "data")][i,]
thisyear[i, c("pdf", "code", "data")]
str_c(thisyear[i, c("pdf", "code", "data")])
str_c("Letter", letters, sep = ": ")
str_c(letters, " is for", "...")
str_c(<a href=\"", thisyear[i, c("pdf", "code", "data")])
str_c("<a href=\"", thisyear[i, c("pdf", "code", "data")])
thisyear[i, c("pdf", "code", "data")]
na.omit(thisyear[i, c("pdf", "code", "data")])
t(thisyear[i, c("pdf", "code", "data")])
na.omit(t(thisyear[i, c("pdf", "code", "data")]))
thisyear[i, c("pdf", "code", "data")]
c = "pdf"
thisyear[i, c]
if(!is.na(thisyear[i, c])){
print("hi")
}
if(is.na(thisyear[i, c])){
print("hi")
}
as.data.frame(t(thisyear[i, c("pdf", "code", "data")]))
na.omit(as.data.frame(t(thisyear[i, c("pdf", "code", "data")])))
drop_na()
as_tibble(t(thisyear[i, c("pdf", "code", "data")]))
as_tibble(t(thisyear[i, c("pdf", "code", "data")])) %>%
drop_na()
?as_tibble.matrix
as_tibble(t(thisyear[i, c("pdf", "code", "data")]), rownames = "info") %>%
drop_na()
as_tibble(t(thisyear[i, c("pdf", "code", "data")]), rownames = "info", column_name = "links") %>%
drop_na()
test <- as_tibble(t(thisyear[i, c("pdf", "code", "data")]), rownames = "info") %>%
drop_na() %>%
for(c in 1:ncol(thisyear[i, c("pdf", "code", "data")])) {
if(!is.na(thisyear[i, c])){
print("hi")
}
}
as_tibble(t(thisyear[i, c("pdf", "code", "data")]), rownames = "info")
test <- as_tibble(t(thisyear[i, c("pdf", "code", "data")]), rownames = "info") %>%
drop_na()
test$V1[1]
test$info[1]
cat("[<a href=\"",test$V1[1],"\">",test$info[1]"</a>]")
cat(" | <a href=\"",thisyear$pdf[i],"\">PDF</a>")
test$V1[1]
cat("[<a href=\"",test$V1[1],"\">","</a>]")
test$info[1]
cat("[<a href=\"",test$V1[1],"\">",test$info[1]"</a>]")
cat("[<a href=\"",test$V1[1],"\">",test$V1[1]"</a>]")
cat("[<a href=\"",test$V1[1],"\">",test$info[1],"</a>]")
?cat
cat("[<a href=\"",test$V1[1],"\">",test$info[1],"</a>]", sep = "")
cat("[<a href=\"",test$V1[1],"\">",test$info[1],"</a>|",
"<a href=\"",test$V1[2],"\">",test$info[2],"</a>]",
sep = "")
cat("[<a href=\"",test$V1[1],"\">",test$info[1],"</a>|",
"<a href=\"",test$V1[2],"\">",test$info[2],"</a>|",
"<a href=\"",test$V1[3],"\">",test$info[3],"</a>]",
sep = "")
test
cat(paste("\n<li>",sep = ""))
cat(paste(thisyear$content[i]))
infodrop <- as_tibble(t(thisyear[i, c("pdf", "code", "data")]), rownames = "info") %>%
drop_na()
if(nrow(infodrop) == 1){
cat("[<a href=\"",infodrop$V1[1],"\">",infodrop$info[1],"</a>]", sep = "")
}
if(nrow(infodrop) == 2){
cat("[<a href=\"",infodrop$V1[1],"\">",infodrop$info[1],"</a>|",
"<a href=\"",infodrop$V1[2],"\">",infodrop$info[2],"</a>]",
sep = "")
}
if(nrow(infodrop) == 3){
cat("[<a href=\"",infodrop$V1[1],"\">",infodrop$info[1],"</a>|",
"<a href=\"",infodrop$V1[2],"\">",infodrop$info[2],"</a>|",
"<a href=\"",infodrop$V1[3],"\">",infodrop$info[3],"</a>]",
sep = "")
}
infodrop <- as_tibble(t(thisyear[i, c("pdf", "code", "data")]), rownames = "info", .name_repair = "minimal") %>%
drop_na()
infodrop <- as_tibble(t(thisyear[i, c("pdf", "code", "data")]), rownames = "info", .name_repair = "unique") %>%
drop_na()
infodrop <- as_tibble(t(thisyear[i, c("pdf", "code", "data")]), rownames = "info", .name_repair = "universal") %>%
drop_na()
t(thisyear[i, c("pdf", "code", "data")]
)
infodrop <- as_tibble(t(thisyear[i, c("pdf", "code", "data")]), rownames = "info", .name_repair = ~ c("V1")) %>%
drop_na()
infodrop
infodrop
cat("[<a href=\"",infodrop$V1[1],"\">",infodrop$info[1],"</a>]", sep = "")
paste(" [ <a href=\"",infodrop$V1[1],"\">",infodrop$info[1],"</a> | ",
"<a href=\"",infodrop$V1[2],"\">",infodrop$info[2],"</a> ]",
sep = "")
